<?xml version = '1.0' encoding = 'UTF-8'?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5" xmlns="http://java.sun.com/xml/ns/javaee">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml,
			classpath:remote-authContext.xml,
			classpath:browserHistoryContext.xml,
			classpath:lockContext.xml,
		</param-value>
	</context-param>

	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<listener>
		<description>ZK listener for session cleanup</description>
		<listener-class>org.zkoss.zk.ui.http.HttpSessionListener</listener-class>
	</listener>
	<servlet>
		<description>ZK loader for ZUML pages</description>
		<servlet-name>zkLoader</servlet-name>
		<servlet-class>org.zkoss.zk.ui.http.DHtmlLayoutServlet</servlet-class>

		<!-- Must. Specifies URI of the update engine (DHtmlUpdateServlet).
		It must be the same as <url-pattern> for the update engine.
		-->
		<init-param>
			<param-name>update-uri</param-name>
			<param-value>/zkau</param-value>
		</init-param>
		<init-param>
			<param-name>compress</param-name>
			<param-value>false</param-value>
		</init-param>
		<!-- [Optional] Specifies the default log level: OFF, ERROR, WARNING,
			INFO, DEBUG and FINER. If not specified, the system default is used.
		<init-param>
			<param-name>log-level</param-name>
			<param-value>OFF</param-value>
		</init-param>
		-->
		<load-on-startup>1</load-on-startup><!-- Must -->
	</servlet>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zul</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zhtml</url-pattern>
	</servlet-mapping>
	<!-- [Optional] Uncomment it if you want to use richlets.
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>/zk/*</url-pattern>
	</servlet-mapping>
	-->
	<servlet>
		<description>The asynchronous update engine for ZK</description>
		<servlet-name>auEngine</servlet-name>
		<servlet-class>org.zkoss.zk.au.http.DHtmlUpdateServlet</servlet-class>
		<init-param>
			<param-name>compress</param-name>
			<param-value>false</param-value>
		</init-param>
		<!-- [Optional] Specifies the AU extension for particular prefix.
		<init-param>
			<param-name>extension0</param-name>
			<param-value>/upload=com.my.MyUploader</param-value>
		</init-param>
		-->
	</servlet>
	<!--
	<servlet>
		<servlet-name>zkLess</servlet-name>
		<servlet-class>org.zkoss.less.ZKLessServlet</servlet-class>
		<init-param>
			<param-name>org.zkoss.less.LessResource</param-name>
			<param-value>/less</param-value>
		</init-param>
		<init-param>
			<param-name>org.zkoss.less.OutputFormat</param-name>
			<param-value>.css.dsp</param-value>
		</init-param>
		<init-param>
			<param-name>org.zkoss.less.CompressOutput</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>-->
	<servlet-mapping>
		<servlet-name>auEngine</servlet-name>
		<url-pattern>/zkau/*</url-pattern>
	</servlet-mapping>
	<!--<servlet-mapping>
		<servlet-name>zkLess</servlet-name>
		<url-pattern>/less/*</url-pattern>
	</servlet-mapping>-->
	<!-- [Optional]
	Uncomment if you want to use the ZK filter to post process the HTML output
	generated by other technology, such as JSP and velocity.
	<filter>
		<filter-name>zkFilter</filter-name>
		<filter-class>org.zkoss.zk.ui.http.DHtmlLayoutFilter</filter-class>
		<init-param>
			<param-name>extension</param-name>
			<param-value>html</param-value>
		</init-param>
		<init-param>
			<param-name>compress</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>zkFilter</filter-name>
		<url-pattern>your URI pattern</url-pattern>
	</filter-mapping>
	-->
	<!-- //// -->
	<!--
	Uncomment it if you want to use DSP
	However, it is turned on since zksandbox uses DSP to generate CSS.-->
	<servlet>
		<servlet-name>dspLoader</servlet-name>
		<servlet-class>org.zkoss.web.servlet.dsp.InterpreterServlet</servlet-class>
		<init-param>
			<param-name>class-resource</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>dspLoader</servlet-name>
		<url-pattern>*.dsp</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>Snoop Servlet</servlet-name>
		<servlet-class>lan.test.auth.SnoopServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>Snoop Servlet</servlet-name>
		<url-pattern>/snoop</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>upload</servlet-name>
		<servlet-class>lan.test.portlet.zk.component.fileupload.FileUploadServlet</servlet-class>
		<init-param>
			<param-name>fileStoreClass</param-name>
			<param-value>lan.test.portlet.zk.component.fileupload.GlobalFileUploadStore</param-value>
		</init-param>
	</servlet>

	<servlet>
		<servlet-name>lockServlet</servlet-name>
		<servlet-class>lan.test.lock.servlet.LockServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>lockServlet</servlet-name>
		<url-pattern>/lock</url-pattern>
	</servlet-mapping>


	<servlet-mapping>
		<servlet-name>upload</servlet-name>
		<url-pattern>/upload</url-pattern>
	</servlet-mapping>


	<!-- /////////// -->
	<!-- [Optional] Session timeout -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!-- [Optional] MIME mapping -->
	<mime-mapping>
		<extension>doc</extension>
		<mime-type>application/vnd.ms-word</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>gif</extension>
		<mime-type>image/gif</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>htm</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>html</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jpeg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jpg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>js</extension>
		<mime-type>text/javascript</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>pdf</extension>
		<mime-type>application/pdf</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>png</extension>
		<mime-type>image/png</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>txt</extension>
		<mime-type>text/plain</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xls</extension>
		<mime-type>application/vnd.ms-excel</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xml</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>zhtml</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>zul</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>

	<welcome-file-list>
		<welcome-file>hello.zul</welcome-file>
	</welcome-file-list>

	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	
	<!--<listener>
		<listener-class>lan.test.spring.CustomCodeContextLoaderListener</listener-class>
	</listener>-->
</web-app>
